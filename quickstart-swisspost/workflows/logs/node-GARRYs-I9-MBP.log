[INFO ] 2020-04-22T16:14:08,682Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows ... {}
[INFO ] 2020-04-22T16:14:08,868Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:09,851Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:14:10,548Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:14:10,560Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:14:10,560Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:11,004Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:11,015Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:14:11,427Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:11,427Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:11,427Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:14:11,550Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:11,560Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:11,950Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:14:12,144Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:12,156Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:14:12,167Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:12,167Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:14:12,167Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:12,807Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:12,807Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-22T16:14:12,881Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:12,881Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:14:12,914Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:12,914Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:14:12,972Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:12,972Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:13,048Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,070Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:13,105Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:14:13,137Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:13,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:14:13,147Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:13,157Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:14:13,157Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:13,170Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,183Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:14:13,183Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,183Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:14:13,183Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,183Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,203Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:13,234Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,234Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:13,234Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,246Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:14:13,258Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,258Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:13,258Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:14:13,278Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:13,278Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:14:13,279Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,289Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:13,322Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:13,334Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,334Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:13,334Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:13,335Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:14:14,847Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:14,847Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:14,847Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:14:14,847Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:14,848Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:14,858Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/.gradle {}
[INFO ] 2020-04-22T16:14:14,859Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:14,883Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:14:14,998Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161404.294/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:14:15,002Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:15,008Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:15,088Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:15,633Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:15,657Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:15,710Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:16,160Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:04.246Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:19,969Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:19,975Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161404.294/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:19,975Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:20,002Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:20,058Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:20,062Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:21,783Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,265Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,267Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,270Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,270Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,331Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:22,371Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:22,392Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:22,392Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:22,568Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:22,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:22,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:22,577Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:22,687Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:22,727Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:22,742Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:22,777Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:22,802Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:22,807Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:14:22,810Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:14:23,108Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:23,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:23,129Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:23,129Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:23,129Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:23,136Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161404.294/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:14:23,136Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:23,136Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:23,141Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:23,159Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:23,160Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:23,183Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:23,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:04.246Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:23,672Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161404.294/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,697Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,701Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,701Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,825Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,837Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,838Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,840Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,840Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,889Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:23,893Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:23,895Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:23,895Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:23,979Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:23,980Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:14:23,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:23,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:23,996Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:24,001Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,006Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:24,008Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,012Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:24,032Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:24,039Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:24,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:24,050Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,051Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:24,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:24,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:24,063Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161404.294/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:14:24,063Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:24,064Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:24,068Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161404.294/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:24,359Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:24,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:24,377Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:24,379Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:04.246Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:24,701Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161404.294/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,717Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,719Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,719Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,805Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,812Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,813Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,814Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,814Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,847Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:24,850Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:24,851Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:24,851Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:24,920Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:24,921Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:14:24,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:24,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:24,941Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,945Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:24,947Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,951Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:24,967Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:24,973Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,975Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572062574) {}
[INFO ] 2020-04-22T16:14:24,976Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:24,982Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,983Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:24,989Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572063995) {}
[INFO ] 2020-04-22T16:14:24,989Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:24,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:24,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:25,000Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:25,000Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:25,001Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572064934) {}
[INFO ] 2020-04-22T16:14:25,001Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:14:25,002Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:14:25,002Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-22T16:14:25,004Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:14:25,004Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:39,712Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows ... {}
[INFO ] 2020-04-22T16:14:39,907Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:40,988Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:14:41,003Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,034Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:41,046Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:14:41,067Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:41,067Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:14:41,079Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:41,079Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:14:41,079Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:14:41,141Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,141Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-22T16:14:41,141Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,141Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:14:41,151Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,151Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:14:41,151Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:14:41,151Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:41,173Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,173Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:41,184Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:14:41,206Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:41,206Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:14:41,206Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:41,216Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:14:41,216Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:14:41,216Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,216Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:14:41,217Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,217Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:14:41,217Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,217Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,217Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:41,237Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,237Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:41,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:41,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:14:41,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,248Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,248Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:14:41,260Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,260Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:41,260Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:14:41,270Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:41,270Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,281Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,303Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:14:41,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:14:41,313Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:41,313Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:14:41,313Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:14:41,315Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:41,324Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/.gradle {}
[INFO ] 2020-04-22T16:14:41,324Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:14:41,349Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:14:41,472Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161435.279/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:14:41,476Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:41,482Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:41,559Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:42,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:42,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:42,226Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:42,331Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:35.233Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:46,026Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:46,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161435.279/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:46,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:46,061Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:46,113Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:46,118Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:47,735Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,237Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,238Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,241Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,241Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,298Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:48,328Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:48,344Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:48,344Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:48,516Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:14:48,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:48,523Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:48,526Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:48,638Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:48,680Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:48,693Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:48,716Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:48,746Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:48,751Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:14:48,754Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:14:49,059Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:49,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:49,080Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:49,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:49,081Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:49,088Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161435.279/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:14:49,089Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:49,089Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:49,093Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:49,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:49,111Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:49,128Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:49,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:35.233Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:49,569Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161435.279/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,572Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,589Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,592Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,592Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,710Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,720Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,721Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,722Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,722Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,779Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:49,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:49,786Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:49,786Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:49,869Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:49,871Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:14:49,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:49,886Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:49,892Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,897Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:49,899Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,903Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:49,920Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:49,928Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,931Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:49,932Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:49,939Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,940Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:49,948Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,948Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:49,949Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:49,949Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:49,953Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-161435.279/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:14:49,953Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:14:49,953Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:14:49,958Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-161435.279/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:14:49,976Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:14:49,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:14:49,998Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:14:50,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:14:35.233Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:14:50,376Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,377Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-161435.279/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,377Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,392Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,394Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,394Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,458Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,464Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,465Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,466Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,466Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,789Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:14:50,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:14:50,794Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:50,794Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:50,861Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:14:50,862Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:14:50,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:14:50,877Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,878Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:50,885Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,889Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:14:50,892Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,895Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:50,912Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:14:50,917Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,919Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572088523) {}
[INFO ] 2020-04-22T16:14:50,920Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:14:50,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,926Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:50,933Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572089886) {}
[INFO ] 2020-04-22T16:14:50,933Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:50,939Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,940Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:14:50,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,945Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:14:50,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572090877) {}
[INFO ] 2020-04-22T16:14:50,946Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:14:50,947Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:14:50,947Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-22T16:14:50,949Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:14:50,949Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:15:05,116Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-161504.049/custom-cordapp_1_6_2c36ac01-4386-47b9-86fb-1a04c40959a4.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:15:05,188Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-161504.049/custom-cordapp_1_6_2c36ac01-4386-47b9-86fb-1a04c40959a4.jar {}
[INFO ] 2020-04-22T16:15:22,889Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/NotaryService {}
[INFO ] 2020-04-22T16:15:23,213Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-22T16:15:23,302Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/NotaryService/cordapps] {}
[INFO ] 2020-04-22T16:15:23,314Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/NotaryService/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:15:23,319Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/NotaryService/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar {}
[INFO ] 2020-04-22T16:15:23,841Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:15:23,866Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:15:23,914Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:15:24,008Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:15:20.413Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:15:27,537Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:27,542Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:27,542Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:27,576Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:27,628Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:27,633Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:29,819Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,309Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,310Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,313Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,313Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,372Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:30,410Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:15:30,424Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:15:30,425Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:15:30,608Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:15:30,615Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:15:30,615Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:30,621Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:15:30,760Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:30,803Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:15:30,811Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:30,814Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:15:30,828Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:15:31,092Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10341 {}
[INFO ] 2020-04-22T16:15:31,094Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10342 {}
[INFO ] 2020-04-22T16:15:31,094Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10343 {}
[INFO ] 2020-04-22T16:15:32,117Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10341 {}
[INFO ] 2020-04-22T16:15:32,281Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10341 {}
[INFO ] 2020-04-22T16:15:32,701Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10341 {}
[INFO ] 2020-04-22T16:15:32,976Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10341 {}
[INFO ] 2020-04-22T16:15:33,006Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLaW89EkAz3WgNhSaaMH7NccUfn1rjtKubLLUmbGiTmRU bound on same address {}
[INFO ] 2020-04-22T16:15:33,067Z [Thread-0 (ActiveMQ-client-factory-threads-395650314)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DLaW89EkAz3WgNhSaaMH7NccUfn1rjtKubLLUmbGiTmRU], sendQueues=[]) {}
[INFO ] 2020-04-22T16:15:33,085Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=D306CCBD2A96312581E8B19741F8C80201580BECD6DC69DEB229F5C122D6AA62 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:15:33,089Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:15:33,091Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:15:33,443Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:33,460Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:15:33,460Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:15:33,467Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:15:33,511Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:15:33,630Z [driver-pool-thread-1] internal.RPCClient. - Startup took 138 msec {}
[INFO ] 2020-04-22T16:15:33,728Z [Test worker] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankA {}
[INFO ] 2020-04-22T16:15:33,729Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-22T16:15:33,730Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankA/cordapps] {}
[INFO ] 2020-04-22T16:15:33,730Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankA/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:15:33,730Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankA/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar {}
[INFO ] 2020-04-22T16:15:33,743Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:15:33,743Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:15:33,748Z [Test worker] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB {}
[INFO ] 2020-04-22T16:15:33,749Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-22T16:15:33,751Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB/cordapps] {}
[INFO ] 2020-04-22T16:15:33,751Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:15:33,751Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB/cordapps/custom-cordapp_1_6_016bc838-f293-4446-8e03-dcaa93a50288.jar {}
[INFO ] 2020-04-22T16:15:33,769Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:15:33,769Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:15:33,776Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:15:33,780Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:15:20.413Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:15:33,804Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:15:33,808Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:15:20.413Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:15:34,369Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,372Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,372Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,406Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,410Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,410Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,560Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,582Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,584Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,588Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,588Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,682Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:34,687Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:15:34,689Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:34,689Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:34,889Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:34,891Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:15:34,915Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:15:34,915Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:34,917Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:15:34,924Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:34,931Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:15:34,931Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:15:34,933Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10345 {}
[INFO ] 2020-04-22T16:15:34,933Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10346 {}
[INFO ] 2020-04-22T16:15:34,933Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10347 {}
[INFO ] 2020-04-22T16:15:34,935Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:34,940Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:15:34,941Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:34,942Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:15:35,090Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10345 {}
[INFO ] 2020-04-22T16:15:35,285Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10345 {}
[INFO ] 2020-04-22T16:15:35,316Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,321Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-161520.400/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,321Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,356Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10345 {}
[INFO ] 2020-04-22T16:15:35,363Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,372Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,372Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,454Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10345 {}
[INFO ] 2020-04-22T16:15:35,498Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL4UL3155Cr8VBA9TYZxhehcsnFVxoWKLXn61Chx7P1jWo bound on same address {}
[INFO ] 2020-04-22T16:15:35,562Z [Thread-0 (ActiveMQ-client-factory-threads-1913496801)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DL4UL3155Cr8VBA9TYZxhehcsnFVxoWKLXn61Chx7P1jWo], sendQueues=[]) {}
[INFO ] 2020-04-22T16:15:35,602Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=D306CCBD2A96312581E8B19741F8C80201580BECD6DC69DEB229F5C122D6AA62 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:15:35,604Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,632Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,634Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,636Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:35,640Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,640Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,648Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:15:35,648Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:15:35,649Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:15:35,722Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:15:35,740Z [driver-pool-thread-0] internal.RPCClient. - Startup took 90 msec {}
[INFO ] 2020-04-22T16:15:35,762Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:15:35,766Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:15:35,767Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:35,767Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:35,808Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:35,809Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:15:35,838Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:35,956Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:15:35,961Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:15:35,994Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:15:35,994Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:35,996Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:15:36,005Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,013Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:15:36,013Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:15:36,018Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10349 {}
[INFO ] 2020-04-22T16:15:36,018Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10350 {}
[INFO ] 2020-04-22T16:15:36,018Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10351 {}
[INFO ] 2020-04-22T16:15:36,023Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10345], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587572134915) {}
[INFO ] 2020-04-22T16:15:36,032Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:15:36,055Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10341], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572130615) {}
[INFO ] 2020-04-22T16:15:36,056Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:15:36,066Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,070Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:15:36,163Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10349 {}
[INFO ] 2020-04-22T16:15:36,288Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10349 {}
[INFO ] 2020-04-22T16:15:36,328Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10349 {}
[INFO ] 2020-04-22T16:15:36,368Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10349 {}
[INFO ] 2020-04-22T16:15:36,396Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLAZZerpZF324FZXkDX1tnq6UhMZMrz4qYPvGHbn9FZehp bound on same address {}
[INFO ] 2020-04-22T16:15:36,426Z [Thread-0 (ActiveMQ-client-factory-threads-827380068)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLAZZerpZF324FZXkDX1tnq6UhMZMrz4qYPvGHbn9FZehp], sendQueues=[]) {}
[INFO ] 2020-04-22T16:15:36,436Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=D306CCBD2A96312581E8B19741F8C80201580BECD6DC69DEB229F5C122D6AA62 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:15:36,443Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,447Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:15:36,447Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:15:36,448Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:15:36,508Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:15:36,524Z [driver-pool-thread-1] internal.RPCClient. - Startup took 76 msec {}
[INFO ] 2020-04-22T16:15:36,808Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,809Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:15:36,822Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,936Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,937Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:15:36,943Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10349], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587572135994) {}
[INFO ] 2020-04-22T16:15:36,999Z [Thread-0 (ActiveMQ-client-factory-threads-178113409)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.252213241374784182, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=c6f62859-08c3-4a47-bcb6-0f6d536be76e, invocation_timestamp=2020-04-22T16:15:36.967Z, origin=default, session_id=bdf5880b-733b-4d7b-a38c-08d8f21cac81, session_timestamp=2020-04-22T16:15:36.448Z}
[INFO ] 2020-04-22T16:15:37,029Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:15:37,029Z [Thread-0 (ActiveMQ-client-factory-threads-2057889855)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.3775020144466321750, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=57a8bd14-f4c8-4f5d-8560-8a4cc193f1d4, invocation_timestamp=2020-04-22T16:15:36.959Z, origin=default, session_id=6257f00a-4ffd-47ae-96b3-25c7e0364856, session_timestamp=2020-04-22T16:15:35.650Z}
[INFO ] 2020-04-22T16:15:39,333Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:15:39,334Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:15:41,591Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:15:41,597Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:15:41,598Z [Thread-0 (ActiveMQ-client-factory-threads-434006643)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.8352543802578768688, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=396b66c4-3d1b-4af0-b6c8-b28ddc37eb7e, invocation_timestamp=2020-04-22T16:15:33.698Z, origin=default, session_id=c69044d1-e4fa-4a24-9fdc-aaadd66af996, session_timestamp=2020-04-22T16:15:33.494Z}
[INFO ] 2020-04-22T16:15:43,840Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:22:57,914Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows ... {}
[INFO ] 2020-04-22T16:22:58,125Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:22:59,105Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:22:59,799Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:22:59,813Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:22:59,814Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:23:00,244Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:23:00,264Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:23:00,662Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:23:00,662Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:00,662Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:23:00,794Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:00,794Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:23:01,191Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:23:01,398Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:23:01,398Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:23:01,421Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:23:01,422Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:23:01,422Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:23:02,068Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:02,068Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-22T16:23:02,155Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:02,155Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:23:02,177Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:02,177Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:23:02,213Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:23:02,214Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:23:02,298Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,308Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:23:02,353Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:23:02,387Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:23:02,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:23:02,402Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:23:02,410Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:23:02,411Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,445Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:23:02,476Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,476Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,487Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,498Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:23:02,498Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,499Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:23:02,509Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:23:02,540Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,540Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:23:02,540Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,540Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,541Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:23:02,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:23:02,573Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:23:02,583Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:23:02,595Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/.gradle {}
[INFO ] 2020-04-22T16:23:02,595Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:23:02,612Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:23:02,744Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-162253.279/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:23:02,748Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:23:02,755Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:23:02,826Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:23:03,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:23:03,425Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:23:03,470Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:23:03,895Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:22:53.234Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:23:06,948Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:06,952Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-162253.279/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:06,952Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:06,972Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:07,023Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:07,026Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:08,542Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,020Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,022Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,025Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,025Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,089Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:09,124Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:23:09,140Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:23:09,140Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:23:09,310Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:23:09,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:23:09,315Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,318Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:23:09,433Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,479Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:23:09,492Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,517Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:09,539Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:23:09,543Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:23:09,546Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:23:09,858Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,877Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,878Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:09,878Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:09,878Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:09,885Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-162253.279/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:23:09,886Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:23:09,886Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:23:09,890Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:23:09,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:23:09,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:23:09,936Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:23:09,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:22:53.234Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:23:10,392Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,394Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-162253.279/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,394Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,408Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,410Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,410Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,504Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,512Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,513Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,514Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,514Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,561Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:10,566Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:23:10,568Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:10,568Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:10,647Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:10,648Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:23:10,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:23:10,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,670Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:10,676Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,680Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:23:10,682Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,688Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:10,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:23:10,712Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,715Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:10,716Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:23:10,722Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,723Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:10,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,729Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:10,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:10,729Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:10,734Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-162253.279/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:23:10,734Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:23:10,734Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:23:10,737Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-162253.279/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:23:11,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:23:11,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:23:11,049Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:23:11,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:22:53.234Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:23:11,327Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,328Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-162253.279/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,328Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,338Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,340Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,340Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,427Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,435Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,436Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,437Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,437Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,470Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:23:11,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:23:11,475Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:11,475Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:11,550Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:23:11,551Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:23:11,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:23:11,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:11,571Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,575Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:23:11,578Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,582Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:11,596Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=285CECFF126389E04E81130352B47A55DE3680A72D4882B9FF550A07FD933649 uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:23:11,602Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587572589315) {}
[INFO ] 2020-04-22T16:23:11,606Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:23:11,615Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,616Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:11,624Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587572590662) {}
[INFO ] 2020-04-22T16:23:11,625Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:11,633Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,633Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:23:11,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,640Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:23:11,640Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587572591564) {}
[INFO ] 2020-04-22T16:23:11,640Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:23:11,642Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:23:11,642Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-22T16:23:11,645Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:23:11,645Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:23:22,532Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162321.169/custom-cordapp_1_6_17075cb6-4d17-4302-8cfb-73a7664667f1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:23:22,612Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162321.169/custom-cordapp_1_6_17075cb6-4d17-4302-8cfb-73a7664667f1.jar {}
[INFO ] 2020-04-22T16:28:12,159Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162811.068/custom-cordapp_1_6_8f096c1f-aa67-44e7-9dd4-ffc7bd1f604e.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:28:12,236Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162811.068/custom-cordapp_1_6_8f096c1f-aa67-44e7-9dd4-ffc7bd1f604e.jar {}
[INFO ] 2020-04-22T16:28:30,572Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162829.492/custom-cordapp_1_6_6f8d7b65-558b-4d06-995b-3b3cca9143af.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:28:30,647Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-162829.492/custom-cordapp_1_6_6f8d7b65-558b-4d06-995b-3b3cca9143af.jar {}
[INFO ] 2020-04-22T16:30:38,190Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows ... {}
[INFO ] 2020-04-22T16:30:38,394Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:30:39,378Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:30:40,066Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:30:40,078Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:30:40,079Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:30:40,514Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:30:40,525Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:30:40,924Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:30:40,925Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:40,935Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:30:41,061Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:41,072Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:30:41,452Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:30:41,637Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:30:41,637Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:30:41,650Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:30:41,650Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:30:41,650Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:30:42,265Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:42,265Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-22T16:30:42,357Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:42,357Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:30:42,382Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:42,382Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:30:42,417Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:30:42,417Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:30:42,506Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,516Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:30:42,565Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:30:42,599Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:30:42,599Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:30:42,599Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:30:42,612Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:30:42,612Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:42,658Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:30:42,691Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:42,701Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,701Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:30:42,711Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:42,711Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:30:42,721Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:30:42,742Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:30:42,742Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:30:42,742Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:30:42,742Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:30:42,742Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:30:42,753Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:30:42,753Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,194Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:30:43,218Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,218Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:30:43,230Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:30:43,230Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:43,230Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:30:44,735Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:30:44,735Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:30:44,735Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:30:44,735Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:30:44,736Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:30:44,746Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/.gradle {}
[INFO ] 2020-04-22T16:30:44,746Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:30:44,768Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:30:44,886Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163033.714/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:30:44,889Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:30:44,895Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:30:44,967Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:30:45,517Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:30:45,540Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:30:45,588Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:45,589Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:46,006Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:30:33.641Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:30:49,023Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:49,030Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163033.714/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:49,030Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:49,062Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:49,128Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:49,132Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:50,657Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,131Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,133Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,139Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,139Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,196Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:51,229Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:30:51,243Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:30:51,243Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:30:51,420Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:30:51,425Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:30:51,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,429Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:30:51,540Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,582Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:30:51,596Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,617Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:51,645Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:30:51,651Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:30:51,653Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:30:51,959Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,982Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:51,982Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:51,982Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:51,989Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163033.714/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:30:51,989Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:30:51,989Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:30:51,993Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:30:52,010Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:30:52,011Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:30:52,026Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:52,026Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:52,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:30:33.641Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:30:52,469Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163033.714/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,489Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,491Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,491Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,590Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,600Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,601Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,602Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,602Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,646Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:52,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:30:52,652Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:52,652Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:52,732Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:52,733Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:30:52,750Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:30:52,750Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:52,751Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:52,758Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:52,764Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:30:52,767Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:52,772Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:52,793Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:30:52,799Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:53,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:53,060Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:30:53,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:53,072Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:53,082Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:53,082Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:53,082Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:53,082Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:53,086Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163033.714/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:30:53,087Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:30:53,087Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:30:53,093Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163033.714/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:30:53,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:30:53,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:30:53,138Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:53,138Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:30:53,140Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:30:33.641Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:30:53,551Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,552Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163033.714/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,552Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,569Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,577Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,577Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,662Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,670Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,671Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,673Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,673Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,713Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:30:53,717Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:30:53,718Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:53,718Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:53,801Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:30:53,803Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:30:53,820Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:30:53,820Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,821Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:53,827Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,833Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:30:53,835Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,839Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:53,857Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:30:53,863Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,865Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573051425) {}
[INFO ] 2020-04-22T16:30:53,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:30:53,873Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,874Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:53,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573052750) {}
[INFO ] 2020-04-22T16:30:53,881Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:53,887Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:30:53,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:30:53,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573053820) {}
[INFO ] 2020-04-22T16:30:53,893Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:30:53,894Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:30:53,894Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-22T16:30:53,897Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:30:53,897Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:31:21,858Z [driver-pool-thread-0] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/NotaryService {}
[INFO ] 2020-04-22T16:31:22,228Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node Notary Service {}
[INFO ] 2020-04-22T16:31:22,321Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/NotaryService/cordapps] {}
[INFO ] 2020-04-22T16:31:22,334Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/NotaryService/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:31:22,340Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/NotaryService/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar {}
[INFO ] 2020-04-22T16:31:22,912Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:31:22,937Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:31:22,978Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:31:23,077Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:19.353Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:31:26,669Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:26,675Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/NotaryService/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:26,675Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:26,738Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:26,790Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:26,796Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,248Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,801Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,803Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,807Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,807Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,877Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:29,910Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:31:29,927Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:31:29,927Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:31:30,220Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:31:30,227Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:31:30,227Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:30,230Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:31:30,367Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:30,409Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:31:30,417Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:30,420Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:31:30,436Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:31:30,728Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10353 {}
[INFO ] 2020-04-22T16:31:30,730Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10354 {}
[INFO ] 2020-04-22T16:31:30,730Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10355 {}
[INFO ] 2020-04-22T16:31:31,710Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10353 {}
[INFO ] 2020-04-22T16:31:31,896Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10353 {}
[INFO ] 2020-04-22T16:31:32,342Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10353 {}
[INFO ] 2020-04-22T16:31:32,627Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10353 {}
[INFO ] 2020-04-22T16:31:32,663Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DL4yYpLQvZJu68oXBNnYC8wEa7iqabmQYotwbXzyZEwUw3 bound on same address {}
[INFO ] 2020-04-22T16:31:32,709Z [Thread-0 (ActiveMQ-client-factory-threads-795641017)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Notary Service, L=Zurich, C=CH, inboxQueues=[p2p.inbound.DL4yYpLQvZJu68oXBNnYC8wEa7iqabmQYotwbXzyZEwUw3], sendQueues=[]) {}
[INFO ] 2020-04-22T16:31:32,726Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=FF3886A52D44D6CC84C0181138B25F4FA08707CA360DA508031C455AF0A500E7 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:31:32,731Z [driver-pool-thread-1] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:31:32,733Z [driver-pool-thread-1] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:31:33,060Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:33,075Z [Node thread-1] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:31:33,075Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:31:33,081Z [Notary Service] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:31:33,124Z [Notary Service] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:31:33,232Z [driver-pool-thread-1] internal.RPCClient. - Startup took 132 msec {}
[INFO ] 2020-04-22T16:31:33,324Z [Test worker] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankA {}
[INFO ] 2020-04-22T16:31:33,324Z [driver-pool-thread-0] internal.DriverDSLImpl. - Starting in-process Node BankA {}
[INFO ] 2020-04-22T16:31:33,325Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankA/cordapps] {}
[INFO ] 2020-04-22T16:31:33,325Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankA/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:31:33,325Z [driver-pool-thread-0] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankA/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar {}
[INFO ] 2020-04-22T16:31:33,336Z [driver-pool-thread-0] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:31:33,336Z [driver-pool-thread-0] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:31:33,343Z [Test worker] network.NodeInfoFilesCopier. - Now watching: /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB {}
[INFO ] 2020-04-22T16:31:33,345Z [driver-pool-thread-1] internal.DriverDSLImpl. - Starting in-process Node BankB {}
[INFO ] 2020-04-22T16:31:33,346Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB/cordapps] {}
[INFO ] 2020-04-22T16:31:33,346Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:31:33,346Z [driver-pool-thread-1] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB/cordapps/custom-cordapp_1_6_eaf16366-ea36-4d96-8ef3-290e07ee48f6.jar {}
[INFO ] 2020-04-22T16:31:33,363Z [driver-pool-thread-1] internal.Node. - Flow external operation executor has a max of 10 threads {}
[INFO ] 2020-04-22T16:31:33,363Z [driver-pool-thread-1] internal.Node. - Node starting up ... {}
[INFO ] 2020-04-22T16:31:33,369Z [driver-pool-thread-0] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:31:33,374Z [driver-pool-thread-0] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:19.353Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:31:33,405Z [driver-pool-thread-1] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:31:33,412Z [driver-pool-thread-1] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:19.353Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:31:33,887Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:33,889Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:33,889Z [driver-pool-thread-0] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:33,914Z [driver-pool-thread-0] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:33,917Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:33,917Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,113Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,126Z [driver-pool-thread-0] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,127Z [driver-pool-thread-0] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,129Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,129Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,206Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,217Z [driver-pool-thread-0] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:31:34,222Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:34,223Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:34,384Z [driver-pool-thread-0] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:34,385Z [driver-pool-thread-0] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:31:34,405Z [driver-pool-thread-0] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:31:34,405Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:34,407Z [driver-pool-thread-0] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:31:34,414Z [driver-pool-thread-0] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:34,422Z [driver-pool-thread-0] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:31:34,423Z [driver-pool-thread-0] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:31:34,425Z [driver-pool-thread-0] BasicInfo. - Advertised P2P messaging addresses      : localhost:10357 {}
[INFO ] 2020-04-22T16:31:34,425Z [driver-pool-thread-0] BasicInfo. - RPC connection address                  : localhost:10358 {}
[INFO ] 2020-04-22T16:31:34,425Z [driver-pool-thread-0] BasicInfo. - RPC admin connection address            : localhost:10359 {}
[INFO ] 2020-04-22T16:31:34,426Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:34,432Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:31:34,432Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:34,434Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:31:34,607Z [driver-pool-thread-0] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10357 {}
[INFO ] 2020-04-22T16:31:34,661Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,662Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/node-driver/20200422-163119.336/BankB/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,662Z [driver-pool-thread-1] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,674Z [driver-pool-thread-1] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,676Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,676Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,754Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10357 {}
[INFO ] 2020-04-22T16:31:34,817Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,840Z [driver-pool-thread-0] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10357 {}
[INFO ] 2020-04-22T16:31:34,844Z [driver-pool-thread-1] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,846Z [driver-pool-thread-1] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,850Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,850Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,919Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10357 {}
[INFO ] 2020-04-22T16:31:34,949Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:31:34,952Z [driver-pool-thread-0] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLCM2kf1HCkM2Mi9thzBGqXe5b3mVRMNFDKUYToSB2aKLq bound on same address {}
[INFO ] 2020-04-22T16:31:34,954Z [driver-pool-thread-1] internal.Node. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:31:34,955Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:34,955Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:34,988Z [Thread-0 (ActiveMQ-client-factory-threads-635795438)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankA, L=, C=GB, inboxQueues=[p2p.inbound.DLCM2kf1HCkM2Mi9thzBGqXe5b3mVRMNFDKUYToSB2aKLq], sendQueues=[]) {}
[INFO ] 2020-04-22T16:31:35,009Z [driver-pool-thread-0] persistence.NodeAttachmentService. - Stored new attachment: id=FF3886A52D44D6CC84C0181138B25F4FA08707CA360DA508031C455AF0A500E7 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:31:35,028Z [driver-pool-thread-0] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:35,039Z [Node thread-2] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:31:35,039Z [Node thread-2] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:31:35,040Z [BankA] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:31:35,110Z [BankA] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:31:35,129Z [driver-pool-thread-0] internal.RPCClient. - Startup took 87 msec {}
[INFO ] 2020-04-22T16:31:35,159Z [driver-pool-thread-1] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:31:35,160Z [driver-pool-thread-1] internal.Node. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:31:35,173Z [driver-pool-thread-1] internal.Node. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:31:35,173Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:35,174Z [driver-pool-thread-1] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:31:35,180Z [driver-pool-thread-1] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:35,185Z [driver-pool-thread-1] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:31:35,185Z [driver-pool-thread-1] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(default, permissions=[ALL])] {}
[INFO ] 2020-04-22T16:31:35,186Z [driver-pool-thread-1] BasicInfo. - Advertised P2P messaging addresses      : localhost:10361 {}
[INFO ] 2020-04-22T16:31:35,187Z [driver-pool-thread-1] BasicInfo. - RPC connection address                  : localhost:10362 {}
[INFO ] 2020-04-22T16:31:35,187Z [driver-pool-thread-1] BasicInfo. - RPC admin connection address            : localhost:10363 {}
[INFO ] 2020-04-22T16:31:35,195Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:35,197Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:31:35,212Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10353], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573090227) {}
[INFO ] 2020-04-22T16:31:35,213Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:31:35,221Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:35,223Z [InProcessNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:31:35,282Z [driver-pool-thread-1] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10361 {}
[INFO ] 2020-04-22T16:31:35,409Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10361 {}
[INFO ] 2020-04-22T16:31:35,417Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:35,418Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankA, L=, C=GB {}
[INFO ] 2020-04-22T16:31:35,435Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10357], legalIdentitiesAndCerts=[O=BankA, L=, C=GB], platformVersion=6, serial=1587573094405) {}
[INFO ] 2020-04-22T16:31:35,461Z [driver-pool-thread-1] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10361 {}
[INFO ] 2020-04-22T16:31:35,500Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10361 {}
[INFO ] 2020-04-22T16:31:35,529Z [driver-pool-thread-1] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLHkVYMzushF49Xj1iRBdjF38ki6zy1ZUtSofj4iw66f9G bound on same address {}
[INFO ] 2020-04-22T16:31:35,559Z [Thread-0 (ActiveMQ-client-factory-threads-540093344)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=BankB, L=, C=US, inboxQueues=[p2p.inbound.DLHkVYMzushF49Xj1iRBdjF38ki6zy1ZUtSofj4iw66f9G], sendQueues=[]) {}
[INFO ] 2020-04-22T16:31:35,577Z [driver-pool-thread-1] persistence.NodeAttachmentService. - Stored new attachment: id=FF3886A52D44D6CC84C0181138B25F4FA08707CA360DA508031C455AF0A500E7 uploader=app filename=Contract: custom-cordapp, Workflow: custom-cordapp {}
[INFO ] 2020-04-22T16:31:35,586Z [driver-pool-thread-1] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:35,592Z [Node thread-3] internal.Node. - Registering JMX reporter: {}
[INFO ] 2020-04-22T16:31:35,592Z [Node thread-3] internal.Node. - Registering Jolokia JMX reporter: {}
[INFO ] 2020-04-22T16:31:35,593Z [BankB] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H) {}
[INFO ] 2020-04-22T16:31:35,657Z [BankB] BasicInfo. - Running P2PMessaging loop {}
[INFO ] 2020-04-22T16:31:35,671Z [driver-pool-thread-1] internal.RPCClient. - Startup took 77 msec {}
[INFO ] 2020-04-22T16:31:36,415Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:36,416Z [InProcessNode-1-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:31:36,424Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:36,425Z [InProcessNode-2-2] network.PersistentNetworkMapCache. - No previous node found for O=BankB, L=, C=US {}
[INFO ] 2020-04-22T16:31:36,427Z [InProcessNode-1-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:36,436Z [InProcessNode-2-2] messaging.P2PMessagingClient. - Updating bridges on network map change: NodeInfo(addresses=[localhost:10361], legalIdentitiesAndCerts=[O=BankB, L=, C=US], platformVersion=6, serial=1587573095173) {}
[INFO ] 2020-04-22T16:31:36,499Z [Thread-0 (ActiveMQ-client-factory-threads-189573839)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.1042799778280116427, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankB, L=, C=US, actor_store_id=NODE_CONFIG, invocation_id=21212eb4-a857-41c1-a976-fcf458791cd5, invocation_timestamp=2020-04-22T16:31:36.466Z, origin=default, session_id=4fc48fcb-70d3-4433-aefb-f5205874c362, session_timestamp=2020-04-22T16:31:35.593Z}
[INFO ] 2020-04-22T16:31:36,524Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:31:36,525Z [Thread-0 (ActiveMQ-client-factory-threads-1435397768)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.3623395852795652950, scheduling for reaping {actor_id=default, actor_owning_identity=O=BankA, L=, C=GB, actor_store_id=NODE_CONFIG, invocation_id=d5e091f2-5500-4247-b1f9-303c652954d5, invocation_timestamp=2020-04-22T16:31:36.458Z, origin=default, session_id=17b99a1c-139a-4a06-85c7-4fa61d48e61a, session_timestamp=2020-04-22T16:31:35.041Z}
[INFO ] 2020-04-22T16:31:38,853Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:31:38,853Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:31:41,116Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:31:41,121Z [Test worker] BasicInfo. - Shutting down ... {}
[INFO ] 2020-04-22T16:31:41,122Z [Thread-0 (ActiveMQ-client-factory-threads-315642020)] rpc.RPCServer. - Detected RPC client disconnect on address rpc.client.default.4927734176421006267, scheduling for reaping {actor_id=default, actor_owning_identity=O=Notary Service, L=Zurich, C=CH, actor_store_id=NODE_CONFIG, invocation_id=0424d107-9f5d-4af1-9e54-af6fbd551384, invocation_timestamp=2020-04-22T16:31:33.301Z, origin=default, session_id=0a6409b0-83d5-4ce8-aea8-b39b46af0580, session_timestamp=2020-04-22T16:31:33.102Z}
[INFO ] 2020-04-22T16:31:43,360Z [Test worker] internal.Node. - Shutdown complete {}
[INFO ] 2020-04-22T16:31:57,044Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows ... {}
[INFO ] 2020-04-22T16:31:57,267Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:31:58,210Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:31:58,918Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:31:58,928Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:31:58,929Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:31:59,385Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:31:59,395Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:31:59,795Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:31:59,806Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:31:59,806Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:31:59,931Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:31:59,942Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:32:00,329Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:32:00,525Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:32:00,526Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:32:00,546Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:32:00,547Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:32:00,547Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:32:01,194Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:32:01,194Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-22T16:32:01,290Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:32:01,291Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:32:01,314Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:32:01,314Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:32:01,360Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:32:01,360Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:32:01,430Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,451Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:32:01,497Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:32:01,532Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:32:01,532Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:32:01,542Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:32:01,552Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:32:01,553Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,575Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:01,597Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:32:01,622Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:01,622Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,634Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:32:01,645Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:01,645Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:32:01,656Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:32:01,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:32:01,669Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:32:01,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:32:01,681Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:32:01,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:32:01,681Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:32:01,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:32:02,119Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:02,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:32:02,130Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:02,130Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:32:02,130Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:02,130Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,131Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:32:02,142Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,142Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:02,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:32:03,661Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:32:03,661Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:32:03,661Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:32:03,661Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:32:03,673Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:32:03,673Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/.gradle {}
[INFO ] 2020-04-22T16:32:03,674Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:32:03,708Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:32:03,838Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163152.343/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:32:03,841Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:32:03,847Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:32:03,916Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:32:04,552Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:32:04,587Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:32:04,650Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:04,650Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:05,080Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:52.297Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:32:08,296Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:08,300Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163152.343/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:08,300Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:08,321Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:08,370Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:08,374Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:09,985Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,488Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,489Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,492Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,492Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,548Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:10,578Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:32:10,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:32:10,593Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:32:10,762Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:32:10,768Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:32:10,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:10,771Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:32:10,892Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:10,933Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:32:10,949Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:10,975Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:10,998Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:32:11,004Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:32:11,006Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:32:11,323Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:11,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:11,346Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:11,346Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:11,346Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:11,353Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163152.343/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:32:11,354Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:32:11,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:32:11,359Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:32:11,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:32:11,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:32:11,412Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:11,412Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:11,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:52.297Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:32:11,874Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,877Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163152.343/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,877Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,892Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,895Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,895Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:11,998Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,010Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,011Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,013Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,013Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,066Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:32:12,072Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:12,072Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:12,154Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:12,155Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:32:12,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:32:12,171Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,179Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:12,184Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,189Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:32:12,192Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,196Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:12,217Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:32:12,224Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,227Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:12,228Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:32:12,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,237Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:12,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,244Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:12,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:12,244Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:12,249Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-163152.343/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:32:12,249Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:32:12,249Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:32:12,254Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/mock-network/20200422-163152.343/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:32:12,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:32:12,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:32:12,567Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:12,567Z [Test worker] internal.NodeFlowManager. - Registered org.r3.tdh.kyc.flows.Initiator to initiate org.r3.tdh.kyc.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:12,569Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-22T16:31:52.297Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:32:12,860Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,861Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-163152.343/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,861Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,870Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,872Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,872Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,928Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,935Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,936Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,937Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,937Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,970Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:32:12,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:32:12,974Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:12,974Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:13,042Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:32:13,044Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:32:13,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:32:13,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,059Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:13,065Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,071Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:32:13,073Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,077Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:13,096Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6F4F2B2D00450339D432D7659FB99836265480770546A6CE44F0AED25012C6FA uploader=app filename=Template CorDapp {}
[INFO ] 2020-04-22T16:32:13,104Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,106Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573130768) {}
[INFO ] 2020-04-22T16:32:13,107Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:32:13,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,116Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:13,123Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573132171) {}
[INFO ] 2020-04-22T16:32:13,124Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:13,131Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,132Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:32:13,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,138Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:32:13,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573133058) {}
[INFO ] 2020-04-22T16:32:13,138Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:32:13,140Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:32:13,140Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[WARN ] 2020-04-22T16:32:13,143Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.template.flows.Initiator, currently using: class com.template.flows.Responder {}
[INFO ] 2020-04-22T16:32:13,143Z [Test worker] internal.NodeFlowManager. - Registered com.template.flows.Initiator to initiate com.template.flows.Responder (version 1) {}
[INFO ] 2020-04-22T16:32:24,924Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-163223.829/custom-cordapp_1_6_f3eaa144-fd0e-46ee-b8d2-0c6321248437.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:32:24,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/garryjackson/Documents/GitHub/quickstart/quickstart-swisspost/workflows/build/generated-custom-cordapps/20200422-163223.829/custom-cordapp_1_6_f3eaa144-fd0e-46ee-b8d2-0c6321248437.jar {}
